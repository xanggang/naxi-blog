(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{506:function(n,e,t){"use strict";t.r(e);var a=t(4),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("vue提供的了transition组件来实现组件的过渡和路由的过渡，合理使用这个组建可以让我们的页面更加的灵活，提高用户体验。")]),n._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[n._v("#")]),n._v(" 概念")]),n._v(" "),t("p",[n._v("在进入/离开的过渡中， 会有6个class的切换， 抄一张官方的图\n"),t("img",{attrs:{src:"1.jpg",alt:""}})]),n._v(" "),t("blockquote",[t("p",[n._v("v-enter：定义进入过渡的开始状态。在元素被插入之前生效，在元素被插入之后的下一帧移除。")])]),n._v(" "),t("blockquote",[t("p",[n._v("v-enter-active：定义进入过渡生效时的状态。在整个进入过渡的阶段中应用，在元素被插入之前生效，在过渡/动画完成之后移除。这个类可以被用来定义进入过渡的过程时间，延迟和曲线函数。")])]),n._v(" "),t("blockquote",[t("p",[n._v("v-enter-to: 2.1.8版及以上 定义进入过渡的结束状态。在元素被插入之后下一帧生效 (与此同时 v-enter 被移除)，在过渡/动画完成之后移除。")])]),n._v(" "),t("blockquote",[t("p",[n._v("v-leave: 定义离开过渡的开始状态。在离开过渡被触发时立刻生效，下一帧被移除。")])]),n._v(" "),t("blockquote",[t("p",[n._v("v-leave-active：定义离开过渡生效时的状态。在整个离开过渡的阶段中应用，在离开过渡被触发时立刻生效，在过渡/动画完成之后移除。这个类可以被用来定义离开过渡的过程时间，延迟和曲线函数。")])]),n._v(" "),t("blockquote",[t("p",[n._v("v-leave-to: 2.1.8版及以上 定义离开过渡的结束状态。在离开过渡被触发之后下一帧生效 (与此同时 v-leave 被删除)，在过渡/动画完成之后移除。")])]),n._v(" "),t("p",[n._v("看起来还是有有点乱，先来捋一下。")]),n._v(" "),t("p",[t("img",{attrs:{src:"2.jpg",alt:""}})]),n._v(" "),t("p",[n._v("enter 定义开始的状态， active定义过程， enter定义结束， 但是在实际进行的时候是有交叉的。\n通过断点可以发现，")]),n._v(" "),t("ul",[t("li",[n._v("添加v-enter")]),n._v(" "),t("li",[n._v("添加v-enter-active,")]),n._v(" "),t("li",[n._v("卸载v-enter")]),n._v(" "),t("li",[n._v("添加v-ernter-to")]),n._v(" "),t("li",[n._v("卸载v-enter-to和v-enter-active")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// transition: all 2s; \n    .move-enter {\n      margin-left: 0;\n    }\n    .move-enter-active {\n       margin-left: 100px;\n    }\n    .move-enter-to {\n      margin-left: 200px;\n    }\n")])])]),t("p",[n._v("例如在上面这种情况下， 过渡动画会怎么进行呢？")]),n._v(" "),t("p",[t("img",{attrs:{src:"3.gif",alt:""}})]),n._v(" "),t("p",[n._v("这里要注意两点。")]),n._v(" "),t("ul",[t("li",[n._v("enter-active覆盖掉了enter的起点位置")]),n._v(" "),t("li",[n._v("一共经过了两次过渡， enter-to是在active结束之后开始的， 所以第四秒， 才回到dom元素本身的位置。")])]),n._v(" "),t("p",[n._v("所以官方文档之， 也是使用v-enter定义起点位置， 在enter-active中控制效果。")]),n._v(" "),t("h3",{attrs:{id:"利用class实现过渡效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用class实现过渡效果"}},[n._v("#")]),n._v(" 利用class实现过渡效果")]),n._v(" "),t("p",[n._v("在这6个class之上， 利用transition或者动画， 都可以实现我们需要的效果。\n举个栗子， 这里我们直接将所有的路由改变都定义一个过渡效果，")]),n._v(" "),t("blockquote",[t("p",[n._v("appear属性表示页面初次加载的时候也适用于动画")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('    <transition appear name="move">\n        <router-view></router-view>\n    </transition>\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("@keyframes animationIn {\n  0% {\n    transform: translate(-100%, 0);\n  }\n  100% {\n    transform: translate(0, 0);\n  }\n}\n@keyframes animationOut {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(100%, 0);\n  }\n}\n\n.move-enter {\n  transform: translate(-100%, 0);\n  position: absolute!important;\n  z-index: 999;\n  top: 0;\n  left: 0;\n  width: 100%;\n}\n.move-enter-active {\n  animation: animationIn 0.2s;\n  position: absolute!important; // 进入的组件要覆盖掉移除的组件，参考 //https://cn.vuejs.org/v2/guide/transitions.html#%E8%BF%87%E6%B8%A1%E6%A8%A1%E5%BC%8F\n  z-index: 999;\n  top: 0;\n  left: 0;\n  width: 100%;\n}\n.move-leave {\n  transform: translate(0, 0);\n}\n.move-leave-active {\n  animation: animationOut 0.2s;\n}\n\n")])])]),t("p",[n._v("效果\n"),t("img",{attrs:{src:"4.gif",alt:""}})]),n._v(" "),t("h3",{attrs:{id:"javascript-钩子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-钩子"}},[n._v("#")]),n._v(" JavaScript 钩子")]),n._v(" "),t("p",[n._v("这些钩子函数可以结合 CSS transitions/animations 使用")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<transition\n  v-on:before-enter="beforeEnter"\n  v-on:enter="enter"\n  v-on:after-enter="afterEnter"\n  v-on:enter-cancelled="enterCancelled"\n\n  v-on:before-leave="beforeLeave"\n  v-on:leave="leave"\n  v-on:after-leave="afterLeave"\n  v-on:leave-cancelled="leaveCancelled"\n>\n  \x3c!-- ... --\x3e\n</transition>\n')])])]),t("p",[n._v("在这些钩子中， 可以使用其他第三方库，回调中的el将是真实的dom元素\n举个栗子, 这里使用了官方推荐的Velocity.js作为动画库")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('    <div class="main">\n      <transition name="showRect" appear\n                  @before-enter="handleBeforeEnter"\n                  @enter="handleEnter"\n                  @after-enter="handleAfterEnter"\n                  @before-leave="handleBeforeLeave"\n                  @leave="handleLeave"\n                  @after-leave="handleAfterLeave"\n                  :css="false">\n        <div class="box" v-if="show"></div>\n      </transition>\n    </div>\n    <button @click="start">切换</button>\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("       methods: {\n      start() {\n        this.show = !this.show\n      },\n      handleBeforeEnter: function (el) {\n        el.style.opacity = 0;\n        console.log('方块显示动画即将执行');\n      },\n      handleEnter: function (el, done) {\n        Velocity(el, 'stop');\n        Velocity(el, {\n          backgroundColor: '#0085eb',\n          opacity: 1,\n          translateX: 260,\n          rotateZ: ['360deg', 0]\n        }, {\n          duration: 1000,\n          easing: [ 0.4, 0.01, 0.165, 0.99 ],\n          complete: done\n        });\n        console.log('方块显示动画执行中...');\n      },\n      handleAfterEnter: function (el) {\n        console.log('方块显示动画结束');\n      },\n      handleBeforeLeave: function (el) {\n        console.log('方块隐藏动画即将执行');\n      },\n      handleLeave: function (el, done) {\n        Velocity(el, 'stop');\n        Velocity(el, {\n          backgroundColor: '#4dd0e1',\n          opacity: 0,\n          translateX: 0,\n          rotateZ: [0, '360deg']\n        }, {\n          duration: 1000,\n          easing: [ 0.4, 0.01, 0.165, 0.99 ],\n          complete: done\n        });\n        console.log('方块隐藏动画执行中...');\n      },\n      handleAfterLeave: function (el) {\n        console.log('方块隐藏动画结束');\n      }\n    }\n")])])]),t("p",[t("img",{attrs:{src:"4.gif",alt:""}})]),n._v(" "),t("h3",{attrs:{id:"列表过渡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表过渡"}},[n._v("#")]),n._v(" 列表过渡")]),n._v(" "),t("p",[n._v("vue还提供了transition-group组件， 作为列表过渡的容器")]),n._v(" "),t("blockquote",[t("p",[n._v("不同于 "),t("code",[n._v("<transition>")]),n._v("，它会以一个真实元素呈现：默认为一个 "),t("code",[n._v("<span>")]),n._v("。你也可以通过 tag 特性更换为其他元素")])]),n._v(" "),t("blockquote",[t("p",[n._v("transition-group 拥特别的v-move属性，它会在元素的改变定位的过程中应用， 效果可参见官网。")])]),n._v(" "),t("p",[n._v("其他的就不抄官网了")]),n._v(" "),t("h5",{attrs:{id:"列表过渡中，-可以结合js钩子，-实现一些特殊的效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表过渡中，-可以结合js钩子，-实现一些特殊的效果"}},[n._v("#")]),n._v(" 列表过渡中， 可以结合js钩子， 实现一些特殊的效果")]),n._v(" "),t("p",[n._v("举个栗子")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<template>\n  <div>\n    <div class="btn" @click="addItem">添加</div>\n    <div class="btn" @click="sort">排序</div>\n    <div class="box">\n      <div class="item-bar">\n        <transition-group name="fade" tag="p" appear\n        v-on:before-enter="beforeEnter"\n        v-on:after-enter="afterEnter">\n        // 这里的data-index 是一个识别标识， 便于在js钩子中获得当前元素的序号\n          <div class="item" v-for="(i, index) in list" :key="i" :data-index="index">{{i}}</div>\n        </transition-group>\n      </div>\n    </div>\n  </div>\n</template>\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<script lang="ts">\n  import Vue from "vue";\n  export default Vue.extend({\n    name: "home",\n    data() {\n      return {\n        show: true,\n        list: [5,4,3,2,1],\n        nextNum: 6\n      };\n    },\n    methods: {\n      showDom() {\n        this.show = !this.show\n      },\n      beforeEnter: function (el: any) {\n        el.style.opacity = 0 // 每个元素插入之前， 透明度为0\n        let index = el.dataset.index  每次可能插入多个元素，\n        // 页面加载时先展示5个\n        if (index < 5) {\n            //设置动画延迟， 实现按续插入的效果\n          el.style.animationDelay = el.dataset.index * 0.3 + \'s\'\n        }\n      },\n      afterEnter: function (el) {\n        el.style.opacity = 1\n        console.log(\'afterEnter\')\n      },\n      addItem() {\n        this.list.push(this.nextNum++)\n      },\n      sort() {\n        this.list = this.list.sort((a, b) => a -b)\n      }\n    }\n  });\n<\/script>\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" @keyframes animat {\n    0% {\n      margin-left: 300px;\n      opacity: 0;\n    }\n    100% {\n      margin-left: 0;\n      opacity: 1;\n    }\n  }\n  .fade-enter {\n    opacity: 0;\n    margin-left: 300px;\n  }\n  .fade-enter-active {\n    opacity: 0;\n    animation: animat 1s;\n  }\n  .fade-enter-to {\n    opacity: 1;\n    margin-left: 0;\n  }\n\n  .fade-move {\n    transition: all 0.3s;\n  }\n  .fade-leave {\n    left: 10px;\n  }\n  .fade-leave-active {\n    transition: all 2s ease-out;\n  }\n  .fade-leave-to {\n    left: -100%;\n  }\n")])])]),t("p",[n._v("效果")]),n._v(" "),t("p",[t("img",{attrs:{src:"5.jpg",alt:""}})]),n._v(" "),t("blockquote",[t("p",[n._v("原文发表在掘金"),t("a",[n._v(" https://juejin.im/post/5ba3583b5188255c6a043671 ")]),n._v(", 然后搬回来的时候gif全都不能动了。\n这边文章就在这里做一个备份吧")])])])}),[],!1,null,null,null);e.default=s.exports}}]);